plugins {
    id 'java-library'
    id('io.github.gradle-nexus.publish-plugin') version '1.1.0'
}

group = 'io.github.invvk'

repositories {
    mavenCentral()
    maven { url = 'https://jitpack.io' }
    maven { url = 'https://repo.aikar.co/content/groups/aikar/' }
    maven { url = 'https://repo.dmulloy2.net/repository/public/' }
    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/public/' }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

nexusPublishing {
    repositories {
        sonatype {  //only for users registered in Sonatype after 24 Feb 2021
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}

subprojects {
    apply plugin: 'java-library'
    repositories {
        mavenCentral()
        maven { url = 'https://jitpack.io' }
        maven { url = 'https://repo.aikar.co/content/groups/aikar/' }
        maven { url = 'https://repo.dmulloy2.net/repository/public/' }
        maven { url 'https://hub.spigotmc.org/nexus/content/repositories/public/' }
        maven { url = 'https://oss.sonatype.org/content/repositories/snapshots/' }
    }

    project.ext.major = '1'
    project.ext.minor = '0'
    project.ext.fullVer = project.ext.major + '.' + project.ext.minor

    dependencies {
        compileOnly ('org.spigotmc:spigot-api:1.8.8-R0.1-SNAPSHOT')

        compileOnly 'org.projectlombok:lombok:1.18.24'
        annotationProcessor 'org.projectlombok:lombok:1.18.24'
    }


    def targetJavaVersion = 8
    java {
        def javaVersion = JavaVersion.toVersion(targetJavaVersion)
        sourceCompatibility = javaVersion
        targetCompatibility = javaVersion
        if (JavaVersion.current() < javaVersion) {
            toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
        }
    }

    tasks.withType(JavaCompile).configureEach {
        if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
            options.release = targetJavaVersion
        }
    }

    processResources {
        def props = [version: version]
        inputs.properties props
        filteringCharset 'UTF-8'
        filesMatching('plugin.yml') {
            expand props
        }
    }
}
